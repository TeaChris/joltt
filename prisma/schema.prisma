// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum  ProductStatus {
  PENDING
  DELIVERED
}

model User {
  id                        String    @id @default(cuid()) @map("_id")
  name                      String?
  email                     String?   @unique
  emailVerified             DateTime?
  image                     String?
  password                  String?
  role                      UserRole @default(USER)
  isTwoFactorEnabled        Boolean @default(false)
}

model Products {
  id                String @id @default(uuid()) @map("_id")
  userId            String
  name              String
  description       String
  price             Float
  size              Int
  stock             Int?
  imageUrl          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  categoryId        String
  category          Category? @relation(fields: [categoryId], references: [id])

  isPublished       Boolean @default(false)

  orders       Orders[]

  @@index([categoryId])
  @@fulltext([name])
}

model Category {
  id         String @id @default(uuid()) @map("_id")
  name       String
  Products    Products[]
}

model VerificationToken {
id      String @id @default(cuid()) @map("_id")
email   String
token   String @unique
expires DateTime

@@unique([email, token])
}

model Orders {
  id                String @id @default(uuid()) @map("_id")
  userId            String
  userEmail         String
  price             Int
  currency          String
  deliveryStatus    String?
  status            String

  paymentIntentId   String  @unique

  products          CartProductType[]

  productId         String
  product           Products @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt()

  @@unique([userId, productId])
  @@index([productId])
}

model StripeCustomer{
  id                  String @id @default(uuid()) @map("_id")
  userId              String @unique
  stripeCustomerId    String @unique

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

type CartProductType{
  id              String
  name            String
  description     String
  category        String
  price           Float
}